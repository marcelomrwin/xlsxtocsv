####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the container image run:
#
# mvn clean package -DskipTests
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t marcelodsales/xlsxtocsv .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 marcelodsales/xlsxtocsv
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050
# 
# Then run the container using : 
#
# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG="true" marcelodsales/xlsxtocsv
#
# If you want to process existing xlsx files in current folder, just mount current folder as /deployments/convert inside container
# ensure that the shared folder has permission to container write  
# Example: mkdir convert && chmod 777 convert
# 
# Then run the container using :
#
# [linux]
# docker run -i --rm -p 8080:8080 -v $(pwd):/deployments/convert:z  marcelodsales/xlsxtocsv
# [windows]
# docker run -i --rm -p 8080:8080 -v %CD%:/deployments/convert:z  marcelodsales/xlsxtocsv
#

###
FROM registry.access.redhat.com/ubi8/ubi-minimal:latest

ARG JAVA_PACKAGE=java-11-openjdk-headless
ARG RUN_JAVA_VERSION=1.3.8

ENV LANG='pt_BR.UTF-8' LANGUAGE='pt_BR:pt'

LABEL maintainer="Marcelo Sales <mlie@gft.com>"
LABEL vendor=GFT \
      system=CSVParser \      
      version="1.0.0-SNAPSHOT" \
      release-date="2021-01-29"

ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install java and the run-java script
# Also set up permissions for user `1001`
RUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \
    && microdnf update \
    && microdnf clean all \
    && mkdir /deployments \
    && chown 1001 /deployments \
    && chmod "g+rwX" /deployments \
    && chown 1001:root /deployments \
    && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \
    && chown 1001 /deployments/run-java.sh \
    && chmod 540 /deployments/run-java.sh \
    && echo "securerandom.source=file:/dev/urandom" >> /etc/alternatives/jre/lib/security/java.security

# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"

COPY target/lib/* /deployments/lib/
COPY target/*-runner.jar /deployments/app.jar

EXPOSE 8080
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]